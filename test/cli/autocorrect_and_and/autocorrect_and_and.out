autocorrect_and_and.rb:12: Call to method `even?` after `&&` assumes result type doesn't change https://srb.help/7037
    12 |    if a.foo && a.foo.even?
                              ^^^^^
  Got `T.nilable(Integer)` originating from:
    autocorrect_and_and.rb:12:
    12 |    if a.foo && a.foo.even?
                        ^^^^^
  Type had been narrowed to `Integer` before `&&`:
    autocorrect_and_and.rb:12:
    12 |    if a.foo && a.foo.even?
               ^^^^^
    autocorrect_and_and.rb:12:
    12 |    if a.foo && a.foo.even?
               ^^^^^^^^^^^^^^^^^^^^
  Note:
    Sorbet never assumes that a method called twice returns the same result both times.
    Either factor out a variable or use `&.`
  Autocorrect: Done
    autocorrect_and_and.rb:12: Deleted
    12 |    if a.foo && a.foo.even?
               ^^^^^^^^^
    autocorrect_and_and.rb:12: Replaced with `&.`
    12 |    if a.foo && a.foo.even?
                             ^

autocorrect_and_and.rb:17: Call to method `even?` after `&&` assumes result type doesn't change https://srb.help/7037
    17 |        a.foo.even?
                      ^^^^^
  Got `T.nilable(Integer)` originating from:
    autocorrect_and_and.rb:17:
    17 |        a.foo.even?
                ^^^^^
  Type had been narrowed to `Integer` before `&&`:
    autocorrect_and_and.rb:16:
    16 |    if a.foo &&
               ^^^^^
    autocorrect_and_and.rb:16:
    16 |    if a.foo &&
    17 |        a.foo.even?
  Note:
    Sorbet never assumes that a method called twice returns the same result both times.
    Either factor out a variable or use `&.`
  Autocorrect: Done
    autocorrect_and_and.rb:16: Deleted
    16 |    if a.foo &&
    17 |        a.foo.even?
    autocorrect_and_and.rb:17: Replaced with `&.`
    17 |        a.foo.even?
                     ^

autocorrect_and_and.rb:22: Call to method `even?` after `&&` assumes result type doesn't change https://srb.help/7037
    22 |        foo.even?
                    ^^^^^
  Got `T.nilable(Integer)` originating from:
    autocorrect_and_and.rb:22:
    22 |        foo.even?
                ^^^
  Type had been narrowed to `Integer` before `&&`:
    autocorrect_and_and.rb:21:
    21 |    if foo &&
               ^^^
    autocorrect_and_and.rb:21:
    21 |    if foo &&
    22 |        foo.even?
  Note:
    Sorbet never assumes that a method called twice returns the same result both times.
    Either factor out a variable or use `&.`
  Autocorrect: Done
    autocorrect_and_and.rb:21: Deleted
    21 |    if foo &&
    22 |        foo.even?
    autocorrect_and_and.rb:22: Replaced with `&.`
    22 |        foo.even?
                   ^
Errors: 3

--------------------------------------------------------------------------

# typed: true

class A
  extend T::Sig

  sig {returns(T.nilable(Integer))}
  def foo; nil; end

  def bar
    a = A.new

    if a.foo&.even?
      puts a.foo
    end

    if a.foo&.even?
      puts a.foo
    end

    if foo&.even?
      puts a.foo
    end
  end
end
